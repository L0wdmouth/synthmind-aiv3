// SynthMind AI - Next.js Starter App with GPT-4o Chat Bot

'use client';

import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent } from '@/components/ui/card';

export default function Home() {
  const [messages, setMessages] = useState([]);
  const [input, setInput] = useState('');
  const [loading, setLoading] = useState(false);

  const sendMessage = async () => {
    if (!input.trim()) return;
    const newMessages = [...messages, { role: 'user', content: input }];
    setMessages(newMessages);
    setInput('');
    setLoading(true);

    const res = await fetch('/api/chat', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ messages: newMessages }),
    });

    const data = await res.json();
    setMessages([...newMessages, { role: 'assistant', content: data.reply }]);
    setLoading(false);
  };

  return (
    <main className="max-w-2xl mx-auto p-4">
      <h1 className="text-3xl font-bold mb-4">SynthMind AI - Demo Chat</h1>
      <Card className="h-[400px] overflow-y-auto mb-4 p-2 bg-gray-100">
        <CardContent>
          {messages.map((msg, idx) => (
            <p key={idx} className={msg.role === 'user' ? 'text-right' : 'text-left'}>
              <strong>{msg.role === 'user' ? 'You' : 'SynthBot'}:</strong> {msg.content}
            </p>
          ))}
          {loading && <p><em>Thinking...</em></p>}
        </CardContent>
      </Card>

      <div className="flex gap-2">
        <input
          className="flex-1 p-2 border rounded"
          type="text"
          placeholder="Ask SynthBot anything..."
          value={input}
          onChange={(e) => setInput(e.target.value)}
          onKeyDown={(e) => e.key === 'Enter' && sendMessage()}
        />
        <Button onClick={sendMessage}>Send</Button>
      </div>
    </main>
  );
}

// --- API Route (/app/api/chat/route.ts) ---

// Place this code in app/api/chat/route.ts

import { OpenAI } from 'openai';
import { NextResponse } from 'next/server';

const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

export async function POST(req: Request) {
  const body = await req.json();
  const messages = body.messages;

  try {
    const completion = await openai.chat.completions.create({
      model: 'mistralai/mistral-7b-instruct',
      messages,
    });

    return NextResponse.json({ reply: completion.choices[0].message.content });
  } catch (err) {
    console.error(err);
    return NextResponse.json({ reply: 'There was an error processing your request.' });
  }
}
"use client"
import { useState } from "react"
import axios from "axios"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import { Card, CardContent } from "@/components/ui/card"

export default function Home() {
  const [messages, setMessages] = useState([{ role: "assistant", content: "Hi, I'm your AI Teammate. What can I help with today?" }])
  const [input, setInput] = useState("")

  const sendMessage = async () => {
    const userMessage = { role: "user", content: input }
    const newMessages = [...messages, userMessage]
    setMessages(newMessages)
    setInput("")

    const res = await axios.post("/api/chat", { messages: newMessages })
    setMessages([...newMessages, res.data])
  }

  return (
    <main className="max-w-2xl mx-auto py-10 px-4">
      <h1 className="text-3xl font-bold mb-4">SynthMind AI</h1>
      <div className="space-y-4 mb-4">
        {messages.map((msg, i) => (
          <Card key={i} className={msg.role === "user" ? "bg-blue-50" : "bg-gray-100"}>
            <CardContent className="p-4">
              <strong>{msg.role === "user" ? "You" : "AI"}:</strong> {msg.content}
            </CardContent>
          </Card>
        ))}
      </div>
      <div className="flex gap-2">
        <Input
          placeholder="Type your message..."
          value={input}
          onChange={(e) => setInput(e.target.value)}
        />
        <Button onClick={sendMessage}>Send</Button>
      </div>
    </main>
  )
}
import { NextRequest, NextResponse } from "next/server"
import { OpenAI } from "openai"

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY
})

export async function POST(req: NextRequest) {
  const body = await req.json()
  const messages = body.messages || []

  const completion = await openai.chat.completions.create({
    model: "mistralai/mistral-7b-instruct",
    messages: messages,
    temperature: 0.7
  })

  const reply = completion.choices[0].message

  return NextResponse.json(reply)
}
